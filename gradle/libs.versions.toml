# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

# - https://developer.android.com/build/migrate-to-catalogs
# - How to migrate to libs.versions.toml -> https://www.youtube.com/watch?v=YXlR59c5pTE


[versions]
javafx = "20"
javafxplugin = "0.1.0"
rxjava = "3.1.9"
logback = "1.4.11"
junit = "5.10.3"
commons-text = "1.12.0"
hibernate = "6.6.3.Final"
postgresql = "42.7.4"
lombok = "1.18.36"
hikari = "6.2.1"
jakarta-validation = "3.1.0"
jakarta-el = "4.0.2"
jakarta-el-api = "6.0.1"
hibernate-validator = "8.0.1.Final"
bcrypt = "0.10.2"


[libraries]
rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
commonsText = { module = "org.apache.commons:commons-text", version.ref = "commons-text" }
bcrypt = { module = "at.favre.lib:bcrypt", version.ref = "bcrypt" }

# UI
javafx-controls = { module = "org.openjfx:javafx-controls", version.ref = "javafx" }
javafx-fxml = { module = "org.openjfx:javafx-fxml", version.ref = "javafx" }

# Logging
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Testing
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }

#DB
hibernate = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
jakarta-validation-api = { group = "jakarta.validation", name = "jakarta.validation-api", version.ref = "jakarta-validation" }
jakarta-el = { group = "org.glassfish", name = "jakarta.el", version.ref = "jakarta-el" }
jakarta-el-api = { group = "jakarta.el", name = "jakarta.el-api", version.ref = "jakarta-el-api" }
hibernate-validator = { group = "org.hibernate.validator", name = "hibernate-validator", version.ref = "hibernate-validator" }


[plugins]
# UI
javafxplugin = { id = "org.openjfx.javafxplugin", version.ref = "javafxplugin" }
